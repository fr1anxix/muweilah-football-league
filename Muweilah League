import React, { useEffect, useState } from "react";
import { db } from "@/firebaseConfig";
import {
  collection,
  getDocs,
  deleteDoc,
  doc,
  DocumentData,
} from "firebase/firestore";
import { Button } from "@/components/ui/button";

export default function AdminDashboard() {
  const [teams, setTeams] = useState<DocumentData[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");

  const fetchTeams = async () => {
    try {
      const snapshot = await getDocs(collection(db, "teams"));
      const data = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));
      setTeams(data);
    } catch (err) {
      console.error("Error fetching teams:", err);
      setError("Failed to load teams. Please try again later.");
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchTeams();
  }, []);

  const deleteTeam = async (id: string) => {
    try {
      await deleteDoc(doc(db, "teams", id));
      setTeams((prev) => prev.filter((team) => team.id !== id));
    } catch (err) {
      console.error("Error deleting team:", err);
      alert("Failed to delete the team.");
    }
  };

  return (
    <div className="p-8 bg-white min-h-screen">
      <h1 className="text-3xl font-bold text-center text-blue-600 mb-8">
        Admin Dashboard
      </h1>

      {error && <p className="text-center text-red-500">{error}</p>}

      {loading ? (
        <p className="text-center">Loading teams...</p>
      ) : (
        <div className="space-y-6">
          {teams.length === 0 ? (
            <p className="text-center text-gray-600">No teams found.</p>
          ) : (
            teams.map((team) => (
              <div
                key={team.id}
                className="border rounded-xl p-4 shadow-sm relative"
              >
                <h2 className="text-xl font-semibold text-red-600">
                  {team.teamName || "Unnamed Team"}
                </h2>
                <p>
                  <strong>Manager:</strong> {team.managerName || "-"}
                </p>
                <p>
                  <strong>Contact:</strong> {team.contact || "-"}
                </p>
                <p className="mt-2">
                  <strong>Players:</strong>
                </p>
                <ul className="list-disc list-inside text-gray-700">
                  {Array.isArray(team.players) && team.players.length > 0 ? (
                    team.players.map((player, idx) => (
                      <li key={idx}>{player}</li>
                    ))
                  ) : (
                    <li>No players listed</li>
                  )}
                </ul>
                <Button
                  variant="destructive"
                  className="absolute top-4 right-4"
                  onClick={() => deleteTeam(team.id)}
                >
                  Delete
                </Button>
              </div>
            ))
          )}
        </div>
      )}
    </div>
  );
}

